1. DFS
현재 정점과 인접한 간선들을 검사하다가 방문하지 않은 정점을 발견하면 그 간선을 통해 방문하지 은 정점으로 이동
정점이 없으면 마지막으로 통과한 간선을 통해 뒤로 돌아가서 해당 정점에서 방문할 수 있는 정점을 탐색
1)stack으로 구현
stack에 부모노드 넣기->부모노드 빼고 자식노드 넣기->부모노드 출력
stack에 부모노드 넣기-> 부모노드 빼고 자식노드 없으면 걍 출력
2)recursion(재귀호출)
bool 행렬, 2차원 list
노드 방문처리->출력->(방문하지 않은 인접한 중 노드1개 방문처리  -> 출력) 반복
ex) 음료수 얼려먹기


2. BFS
큐, bool 행렬, 2차원 list
노드를 큐에 삽입 -> 방문처리 -> (큐에서 꺼내기->꺼낸 노드의 인접 노드 중 방문 안한 노드를 모두 큐에 삽입-> 방문처리) 반복
ex) 미로탈출





